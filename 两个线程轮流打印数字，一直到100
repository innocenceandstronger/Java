// 创建对象，
// 分别创建两个方法，我们使用flag来控制执行print1方法还是print2方法
private static class SecondObject{
	private static boolean flag = true;
	private int count = 0;
	
	public synchronized void print1(){
		for (int i = 1; i <= 50; i++) {
			if(!flag){
				try {
					this.wait();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			
			System.out.print(++count);
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			flag = !flag;
			
			this.notifyAll();
		}
	}
	
	public synchronized void print2(){
		for (int i = 1; i <= 50; i++) {
			if(flag){
				try {
					this.wait();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			
			System.out.print(++count);
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			flag = !flag;
			
			this.notifyAll();
		}
	}
}
 
 
public class Test {
 
	public static void main(String[] args) {
		
		
		// 2.两个线程轮流打印数字，一直到100
		SecondObject so = new SecondObject();
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				so.print1();
			}
		}).start();
		
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				so.print2();
			}
		}).start();
 
	}
}
