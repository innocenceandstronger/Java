import java.util.Arrays;
public class Test0926 {
    public static void swap(int[] array,int i,int j){
        int t=array[i];
        array[i]=array[j];
        array[j]=t;
    }
    public static void quickSort(int[] array,int left,int right){   //left,right指的是下标
        quickSortInternal(array,0,array.length-1);
    }
    private static void quickSortInternal(int[] array,int left,int right){
        if(left==right){
            return;
        }
        if(left>right){
            return;
        }
        int pivotIndex=partition1(array,left,right);
        quickSortInternal(array,left,pivotIndex-1);
        quickSortInternal(array,pivotIndex+1,right);
    }
    private static int partition(int[] array,int left,int right){
        int i=left;
        int j=right;
        int pivot=array[left];
        while(i<j){
            while(i<j&&array[j]>=pivot){
                j--;
            }
            while(i<j&&array[i]<=pivot){
                i++;
            }
            swap(array,i,j);
        }
        swap(array,i,left);
        return i;
    }


    //挖坑法
    private static int partition1(int[] array,int left,int right){
        int i=left;
        int j=right;
        int pivot=array[left];
        while(i<j){
            while(i<j&&array[j]>=pivot){
                j--;
            }
            array[i]=array[j];
            while(i<j&&array[i]<=pivot){
                i++;
            }
            array[j]=array[i];
        }
        array[i]=pivot;
        return i;
    }



    private static int partition2(int[] array,int left,int right){
        int d=left+1;
        int pivot=array[left];
        for(int i=left+1;i<=right;i++){
            if(array[i]<pivot){
                swap(array,i,d);
                d++;
            }
        }
        swap(array,d-1,left);
        return d-1;
    }



    public static void main(String[] args){
        int[] a={3,4,9,7,2,8,6,5,3};
        int[] array={6,8,9,3,4,2,5,1,7};
        quickSort(a,0,9);
        quickSort(array,0,9);
        System.out.println(Arrays.toString(a));
        System.out.println(Arrays.toString(array));
    }
}
