import java.util.Scanner;
//一个程序里只能有一个public的类
class Fibonacci {
    // O(2^n)
    public static long calc(int n) { //求斐波那契数—递归
        if (n == 0 || n == 1) {
            return 1;
        } else {
            return calc(n - 1) + calc(n - 2);
        }
    }
}
//---------------------------------------------------------------------
class FibonacciThread extends Thread {//以下是多线程写的
    private int n;
    public FibonacciThread(int n) {//构造方法
        this.n = n;
    }
    @Override
    public void run() {
        long result=Fibonacci.calc(n);//  类名.方法名(参数)
        System.out.printf("第 %d 项斐波那契数为： %d%n",n,result);
    }
}
public class ThreadDemo2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {//构造死循环
            System.out.println("请输入要计算第几项的斐波那契数");
            int n = scanner.nextInt();//输入
            Thread thread = new FibonacciThread(n);
            thread.start();//开始执行
        }
    }
}
