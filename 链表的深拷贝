public CNode complexCopy(CNode head) {
        if (head == null) {
            return null;
        }
        CNode p1 = head;
        while (p1 != null) {
            CNode p2 = new CNode();
             p2.val=p1.val;
             p2.random=null;


            p2.next = p1.next;    //将P2插入到p1后面
            p1.next = p2;

            p1 = p2.next;//p1得往后走啊
        }//此时p2已经完全插入到p1后面了


//处理random指向：
        p1 = head;
        while (p1 != null) {
            CNode p2 = p1.next;
            if (p1.random != null) {
                p2.random = p1.random.next;
            }  //不用考虑p2的random，因为在一开始就把p2的random置空了

            p1 = p2.next;
        }

//将两个链表分开，p2中的random指向没有改变，因为在第二步中p2中random的指向
//指的就是p2中的结点
        p1 = head;
        CNode newHead = head.next;

        while (p1 != null) {
            CNode p2 = p1.next;

            p1.next = p2.next;
            if (p2.next != null) {
                p2.next = p2.next.next;
            }

            p1 = p1.next;
        }

        return newHead;
    }
}
